#!/usr/bin/env node
'use strict';

var cli = require('commander');

require('colors');

var pkg = require('../package.json');
var Config = require('../lib/config').Config;

Config.load();
var $28 = Config.getAPIClient();

//List Projects
cli
    .command('list')
    .description('List of 28.io projects.')
    .action(function(){
        Config.refreshTokens()
            .then(function(){
                return Config.getProjects().then(function(response){
                    console.log('Project List:');
                    response.body.forEach(function(project){
                        var line = '* ' + project.name + ' (' + project.sausaVersion + ')';
                        console.log(project.updateableTo ? line.grey : line);
                    });
                });
            });
    });

//Create Project
cli.command('create [project-name]')
.description('Create a new 28.io project.')
.action(function(projectName){
    projectName = projectName || Config.getDefaultProject();
    console.log('Creating Project ' + projectName + '...'.grey);
    Config.refreshTokens(projectName)
    .then(function(){
        return $28.createProject(projectName, Config.getAccessToken());
    })
    .then(function(){
        console.log(('Created ' + projectName + '.').green);
    })
    .catch(Config.handleAPIError);
});

//Delete Project
cli.command('delete [project-name]')
.description('Delete a new 28.io project.')
.action(function(projectName){
    projectName = projectName || Config.getDefaultProject();
    console.log('Deleting Project ' + projectName + '...'.grey);
    Config.refreshTokens(projectName)
    .then(function(){
        return $28.deleteProject(projectName, Config.getAccessToken());
    })
    .then(function(){
        console.log(('Deleted ' + projectName + '.').green);
    })
    .catch(Config.handleAPIError);
});

cli.version(pkg.version);
cli.parse(process.argv);

if (!cli.args.length) {
    cli.help();
}
